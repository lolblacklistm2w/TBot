//@version=4
study("Cruce de medias móviles", shorttitle="To the Moon By MM", overlay=true)
var color longColor = color.rgb(35, 153, 129)
var color shortColor = color.rgb(233, 30, 99)
// Configura las medias móviles
emaLengthShort = input(5, title="Longitud de la EMA corta")
emaLengthLong = input(10, title="Longitud de la EMA larga")
emaLength = input(20, title="Longitud de la EMA")
emaLineShort = ema(close, emaLengthShort)
emaLineLong = ema(close, emaLengthLong)
emaLine = ema(close, emaLength)
length = input(title="Moving Average", type=input.integer, defval=50)
offset = input(title="Offset", type=input.integer, defval=0)
src = input(close, title="Source")
lsma = linreg(src, length, offset)
lsma2 = linreg(lsma, length, offset)
eq= lsma-lsma2
zlsma = lsma+eq

plot(zlsma, color=color.rgb(171, 71, 188), linewidth=3)

// Dibuja las medias móviles en el gráfico
plot(emaLineShort, color=longColor, linewidth=2, title="EMA Corta")
plot(emaLineLong, color=shortColor, linewidth=2, title="EMA Larga")
plot(emaLine, color=color.yellow, linewidth=2, title="EMA")

// Detecta los cruces de medias móviles
bullishCross = crossover(emaLineShort, emaLineLong)
bearishCross = crossunder(emaLineShort, emaLineLong)

// Genera las alertas
alertcondition(bullishCross, title="Cruce Alcista", message="La EMA corta ha cruzado por encima de la EMA larga. Posible señal de compra.")
alertcondition(bearishCross, title="Cruce Bajista", message="La EMA corta ha cruzado por debajo de la EMA larga. Posible señal de venta.")

// Dibuja una 'X' en el gráfico donde ocurren los cruces
plotshape(series=bullishCross, location=location.belowbar, color=longColor, style=shape.xcross, title="Cruce Alcista")
plotshape(series=bearishCross, location=location.abovebar, color=shortColor, style=shape.xcross, title="Cruce Bajista")


//CHANDELIER EXIT
length2 = input(title="ATR Period", type=input.integer, defval=1)
mult = input(title="ATR Multiplier", type=input.float, step=0.1, defval=2.0)
showLabels = input(title="Show Buy/Sell Labels ?", type=input.bool, defval=true)
useClose = input(title="Use Close Price for Extremums ?", type=input.bool, defval=true)
highlightState = input(title="Highlight State ?", type=input.bool, defval=true)

atr = mult * atr(length2)

longStop = (useClose ? highest(close, length2) : highest(length2)) - atr
longStopPrev = nz(longStop[1], longStop) 
longStop := close[1] > longStopPrev ? max(longStop, longStopPrev) : longStop

shortStop = (useClose ? lowest(close, length2) : lowest(length2)) + atr
shortStopPrev = nz(shortStop[1], shortStop)
shortStop := close[1] < shortStopPrev ? min(shortStop, shortStopPrev) : shortStop

var int dir = 1
dir := close > shortStopPrev ? 1 : close < longStopPrev ? -1 : dir



longStopPlot = plot(dir == 1 ? longStop : na, title="Long Stop", style=plot.style_linebr, linewidth=2, color=longColor)
buySignal = dir == 1 and dir[1] == -1
plotshape(buySignal ? longStop : na, title="Long Stop Start", location=location.absolute, style=shape.circle, size=size.tiny, color=longColor, transp=0)
plotshape(buySignal and showLabels ? longStop : na, title="Buy Label", text="Buy", location=location.absolute, style=shape.labelup, size=size.tiny, color=longColor, textcolor=color.white, transp=0)

shortStopPlot = plot(dir == 1 ? na : shortStop, title="Short Stop", style=plot.style_linebr, linewidth=2, color=shortColor)
sellSignal = dir == -1 and dir[1] == 1
plotshape(sellSignal ? shortStop : na, title="Short Stop Start", location=location.absolute, style=shape.circle, size=size.tiny, color=shortColor, transp=0)
plotshape(sellSignal and showLabels ? shortStop : na, title="Sell Label", text="Sell", location=location.absolute, style=shape.labeldown, size=size.tiny, color=shortColor, textcolor=color.white, transp=0)

midPricePlot = plot(ohlc4, title="", style=plot.style_circles, linewidth=0, display=display.none, editable=false)

longFillColor = highlightState ? (dir == 1 ? longColor : na) : na
shortFillColor = highlightState ? (dir == -1 ? shortColor : na) : na
fill(midPricePlot, longStopPlot, title="Long State Filling", color=longFillColor)
fill(midPricePlot, shortStopPlot, title="Short State Filling", color=shortFillColor)

changeCond = dir != dir[1]
alertcondition(changeCond, title="Alert: CE Direction Change", message="Chandelier Exit has changed direction!")
alertcondition(buySignal, title="Alert: CE Buy", message="Chandelier Exit Buy!")
alertcondition(sellSignal, title="Alert: CE Sell", message="Chandelier Exit Sell!")

//input variables
length3=input(title="Look Back Period", type=integer, defval=22)
ATRPeriod=input(title="ATR Period", type=integer, defval=22)
mult2=input(title="ATR Multiplier", type=integer, defval=3)

//calculate stop value
short_stop = lowest(length3)+mult2*atr(ATRPeriod)
long_stop  = highest(length3)-mult2*atr(ATRPeriod)

shortvs=na(shortvs[1]) ? short_stop : iff(close>shortvs[1], short_stop , min(short_stop,shortvs[1]))
longvs=na(longvs[1]) ? long_stop : iff(close<longvs[1], long_stop, max(long_stop,longvs[1]))

longswitch=iff (close>=shortvs[1] and close[1]<shortvs[1] , 1 ,  0)
shortswitch=iff (close<=longvs[1] and close[1]>longvs[1] ,  1 ,  0)

direction= iff(na(direction[1]), 0, iff (direction[1]<=0 and longswitch, 1, iff (direction[1]>=0 and shortswitch, -1, direction[1])))
			
pc=direction>0?longvs:shortvs
// Add alerts
alertcondition(longswitch, title="Long Alert", message="Direction changed to Long")
alertcondition(shortswitch, title="Short Alert", message="Direction changed to Short")

plot(pc, color=direction>0?longColor:shortColor, style=circles, linewidth=2)
plot(pc, color=direction>0?longColor:shortColor, style=line, linewidth=2)
